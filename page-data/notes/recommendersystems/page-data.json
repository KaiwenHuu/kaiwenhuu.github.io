{"componentChunkName":"component---src-pages-notes-recommendersystems-index-js","path":"/notes/recommendersystems/","result":{"data":{"allMarkdownRemark":{"nodes":[{"frontmatter":{"date":"August 1, 2025","title":"Basics","slug":"basics"},"id":"d5ee50fa-8ad4-5d3a-99c4-8b6ea8e54fb1","excerpt":"Premise A recommender service should be optimized toward a specific goal - such as increasing user engagement (e.g., number of interactions…"},{"frontmatter":{"date":"August 2, 2025","title":"Retrieval","slug":"retrieval"},"id":"cb520207-6a73-5926-877d-d1c154139e08","excerpt":"Problem Ranking a big volume of contents will have poor latency on the service. Goal Before ranking contents, have a fast model that can…"},{"frontmatter":{"date":"August 2, 2025","title":"Evaluating Recommender Model","slug":"evaluation"},"id":"dc3ef1e9-637e-58b5-8f47-bc74033bf6a6","excerpt":"Offline Metrics Given a test data on impressions logs, group the logs by query. This will give a dictionary where key is the query, and…"},{"frontmatter":{"date":"August 2, 2025","title":"Training Recommender Model","slug":"training"},"id":"b4ce9ea4-420c-54c0-a283-844a95e85f32","excerpt":"Task Given a query, we want to identify the content with the highest probability of interaction (e.g., click), denoted as . Suppose  is the…"}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}