{"componentChunkName":"component---src-templates-notes-template-js","path":"/notes/microservices/attention/","result":{"data":{"markdownRemark":{"html":"<h2>Reviewing Basics</h2>\n<p>Create <code>Dockerfile</code> in directory. The <code>Dockerfile</code> should look something like <a href=\"https://github.com/docker/welcome-to-docker/blob/main/Dockerfile\">this</a></p>\n<pre><code># Start your image with a node base image. Images can be found in https://hub.docker.com/\nFROM node:18-alpine\n\n# The /app directory should act as the main application directory of the image.\nWORKDIR /app\n\n# Copying directories have the following format\n# COPY {local_directory} {image_directory}\n\n# Copy the app package and package-lock.json file.\nCOPY package*.json ./\n\n# Copy local directories to the current local directory of our docker image (/app)\nCOPY ./src ./src\nCOPY ./public ./public\n\n# Install node packages, install serve, build the app, and remove dependencies at the end\nRUN npm install \\\n    &#x26;&#x26; npm install -g serve \\\n    &#x26;&#x26; npm run build \\\n    &#x26;&#x26; rm -fr node_modules\n\n# Expose port\nEXPOSE 3000\n\n# There should only be one CMD in a Dockerfile\n# Start the app using serve command\nCMD [ \"serve\", \"-s\", \"build\" ]\n</code></pre>\n<p>Then run the following commands</p>\n<pre><code>docker build -t {image_name} . # builds a docker image\ndocker run -d -p {local_port}:{image_port} --name {} {}\n</code></pre>\n<p>Another way to start a docker container:</p>\n<pre><code>docker init\ndocker compose up\n</code></pre>\n<p><a href=\"http://localhost:%7Blocal_port%7D/\">http://localhost:{local_port}/</a></p>\n<p><code>docker ps</code> shows all the docker containers that are running</p>\n<p><code>docker stop {container_id}</code> to stop a container</p>\n<p><code>docker rm {container_id}</code> to remove a container</p>","frontmatter":{"date":"January 11, 2025","slug":"attention","title":"Docker"}}},"pageContext":{"id":"4224f87e-7259-5988-b5c7-9a487269196b"}},"staticQueryHashes":[],"slicesMap":{}}